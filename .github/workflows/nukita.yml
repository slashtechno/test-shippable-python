name: Build with Nuitka

on: [push, pull_request]

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}
    env:
      PYTHON_FILE: "main.py" # Replace with your Python entrypoint file

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          architecture: 'x64'
          cache: 'pip'
          cache-dependency-path: |
            **/requirements*.txt

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Build Executable with Nuitka
        uses: Nuitka/Nuitka-Action@main
        with:
          nuitka-version: main
          script-name: ${{ env.PYTHON_FILE }}
          module-parameter: --onefile
          assume-yes-for-downloads: true
          output-dir: dist


      - name: Upload Executable
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }} Executable
          path: |
            dist/main.bin
            dist/main.exe
            dist/main.app
          if-no-files-found: error

  release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/${{ github.event.repository.default_branch }}'
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: List downloaded files
        run: find ./artifacts

      - name: Create/Update Rolling Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: rolling
          name: Rolling Release
          # Only upload the actual binary files, not everything in artifacts/
          files: |
            ./artifacts/**/main.bin
            ./artifacts/**/main.exe
            ./artifacts/**/main.app/**
          generate_release_notes: true
          prerelease: false
          draft: false
          create_tag: true
